{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { LOGIN_SUCCESS } from \"./userAction\";\nconst initialState = {\n  isLoggedIn: false,\n  username: \"\",\n  firstname: \"\",\n  lastname: \"\",\n  purchasedWidgets: [],\n  cartWidgets: []\n}; // export const userReducer = (state = { userData: initialState }, action:any) => {\n//     switch (action.type) {\n//         case \"LOGIN_SUCCESS\":\n//             return { ...state, userData: [{...state.userData}, action.payload] };\n//         case \"LOGOUT\":\n//             return { userData: action.payload };\n//         case \"SET_USERNAME\":\n//             return { userData: action.payload };\n//         default:\n//             return state;\n//     }\n// };\n\nconst JsonDataReducer = createReducer(initialState, builder => {\n  builder.addCase(LOGIN_SUCCESS, (state, action) => ({ ...state,\n    JsonData: action.payload\n  }));\n});","map":{"version":3,"names":["createReducer","LOGIN_SUCCESS","initialState","isLoggedIn","username","firstname","lastname","purchasedWidgets","cartWidgets","JsonDataReducer","builder","addCase","state","action","JsonData","payload"],"sources":["D:/gaurav/engame2/my-app/src/redux/UserRedux/user-reducer.tsx"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { LOGIN_SUCCESS } from \"./userAction\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    username: \"\",\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    purchasedWidgets: [],\r\n    cartWidgets: []\r\n}\r\n\r\n// export const userReducer = (state = { userData: initialState }, action:any) => {\r\n//     switch (action.type) {\r\n  \r\n//         case \"LOGIN_SUCCESS\":\r\n//             return { ...state, userData: [{...state.userData}, action.payload] };\r\n\r\n//         case \"LOGOUT\":\r\n//             return { userData: action.payload };\r\n\r\n//         case \"SET_USERNAME\":\r\n//             return { userData: action.payload };\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };\r\n\r\nconst JsonDataReducer = createReducer(initialState, (builder) => {\r\n    builder.addCase(LOGIN_SUCCESS, (state, action) => ({...state, JsonData : action.payload}))\r\n  });\r\n  "],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,cAA9B;AAEA,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,KADK;EAEjBC,QAAQ,EAAE,EAFO;EAGjBC,SAAS,EAAE,EAHM;EAIjBC,QAAQ,EAAE,EAJO;EAKjBC,gBAAgB,EAAE,EALD;EAMjBC,WAAW,EAAE;AANI,CAArB,C,CASA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,eAAe,GAAGT,aAAa,CAACE,YAAD,EAAgBQ,OAAD,IAAa;EAC7DA,OAAO,CAACC,OAAR,CAAgBV,aAAhB,EAA+B,CAACW,KAAD,EAAQC,MAAR,MAAoB,EAAC,GAAGD,KAAJ;IAAWE,QAAQ,EAAGD,MAAM,CAACE;EAA7B,CAApB,CAA/B;AACD,CAFkC,CAArC"},"metadata":{},"sourceType":"module"}