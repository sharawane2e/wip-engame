{"ast":null,"code":"import { createReducer } from \"@reduxjs/toolkit\";\nimport { setisLoggedIn, setLoginErrMsg, setUserDetails } from \"./userAction\";\nconst initialState = {\n  isLoggedIn: false,\n  loginErrMsg: \"\",\n  userDetails: {\n    username: \"gaurav\",\n    firstname: \"\",\n    lastname: \"\",\n    purchasedWidgets: [],\n    cartWidgets: []\n  }\n};\nexport const userReducer = createReducer(initialState, builder => {\n  builder.addCase(setisLoggedIn, (state, action) => ({ ...state,\n    isLoggedIn: action.payload\n  }));\n  builder.addCase(setLoginErrMsg, (state, action) => ({ ...state,\n    loginErrMsg: action.payload\n  }));\n  builder.addCase(setUserDetails, (state, action) => ({ ...state,\n    userDetails: action.payload\n  }));\n}); // export const userReducer = (state = { userData: initialState }, action:any) => {\n//     switch (action.type) {\n//         case \"LOGIN_SUCCESS\":\n//             return { ...state, userData: [{...state.userData}, action.payload] };\n//         case \"LOGOUT\":\n//             return { userData: action.payload };\n//         case \"SET_USERNAME\":\n//             return { userData: action.payload };\n//         default:\n//             return state;\n//     }\n// };","map":{"version":3,"names":["createReducer","setisLoggedIn","setLoginErrMsg","setUserDetails","initialState","isLoggedIn","loginErrMsg","userDetails","username","firstname","lastname","purchasedWidgets","cartWidgets","userReducer","builder","addCase","state","action","payload"],"sources":["D:/gaurav/engame2/my-app/src/redux/UserRedux/user-reducer.tsx"],"sourcesContent":["import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { setisLoggedIn, setLoginErrMsg, setUserDetails } from \"./userAction\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    loginErrMsg: \"\",\r\n    userDetails : {\r\n        username: \"gaurav\",\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        purchasedWidgets: [],\r\n        cartWidgets: [],\r\n    }\r\n}\r\n\r\nexport const userReducer = createReducer(initialState, (builder) => {\r\n\r\n    builder.addCase(setisLoggedIn, (state, action) => ({...state, isLoggedIn : action.payload}));\r\n\r\n    builder.addCase(setLoginErrMsg, (state, action) => ({...state, loginErrMsg : action.payload}));\r\n\r\n    builder.addCase(setUserDetails, (state, action) => ({...state, userDetails : action.payload}));\r\n\r\n});\r\n\r\n// export const userReducer = (state = { userData: initialState }, action:any) => {\r\n//     switch (action.type) {\r\n  \r\n//         case \"LOGIN_SUCCESS\":\r\n//             return { ...state, userData: [{...state.userData}, action.payload] };\r\n\r\n//         case \"LOGOUT\":\r\n//             return { userData: action.payload };\r\n\r\n//         case \"SET_USERNAME\":\r\n//             return { userData: action.payload };\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// };"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,cAAxC,QAA8D,cAA9D;AAEA,MAAMC,YAAY,GAAG;EACjBC,UAAU,EAAE,KADK;EAEjBC,WAAW,EAAE,EAFI;EAGjBC,WAAW,EAAG;IACVC,QAAQ,EAAE,QADA;IAEVC,SAAS,EAAE,EAFD;IAGVC,QAAQ,EAAE,EAHA;IAIVC,gBAAgB,EAAE,EAJR;IAKVC,WAAW,EAAE;EALH;AAHG,CAArB;AAYA,OAAO,MAAMC,WAAW,GAAGb,aAAa,CAACI,YAAD,EAAgBU,OAAD,IAAa;EAEhEA,OAAO,CAACC,OAAR,CAAgBd,aAAhB,EAA+B,CAACe,KAAD,EAAQC,MAAR,MAAoB,EAAC,GAAGD,KAAJ;IAAWX,UAAU,EAAGY,MAAM,CAACC;EAA/B,CAApB,CAA/B;EAEAJ,OAAO,CAACC,OAAR,CAAgBb,cAAhB,EAAgC,CAACc,KAAD,EAAQC,MAAR,MAAoB,EAAC,GAAGD,KAAJ;IAAWV,WAAW,EAAGW,MAAM,CAACC;EAAhC,CAApB,CAAhC;EAEAJ,OAAO,CAACC,OAAR,CAAgBZ,cAAhB,EAAgC,CAACa,KAAD,EAAQC,MAAR,MAAoB,EAAC,GAAGD,KAAJ;IAAWT,WAAW,EAAGU,MAAM,CAACC;EAAhC,CAApB,CAAhC;AAEH,CARuC,CAAjC,C,CAUP;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}