{"ast":null,"code":"import { setisLoggedIn, setLoginErrMsg, setUserDetails } from '../redux/UserRedux/userAction';\nimport store from '../redux/store';\nimport axios from 'axios';\nexport const setReduxUser = username => {\n  return new Promise((res, rej) => {\n    axios.get(\"http://localhost:5000/user/\" + username).then(user => {\n      var _data$purchasedWidget, _data$cartWidgets;\n\n      let data = user.data;\n      let details = {\n        isLoggedIn: true,\n        loginErrMsg: \"\",\n        username: data === null || data === void 0 ? void 0 : data.username,\n        firstname: data === null || data === void 0 ? void 0 : data.firstname,\n        lastname: data === null || data === void 0 ? void 0 : data.lastname,\n        purchasedWidgets: data === null || data === void 0 ? void 0 : (_data$purchasedWidget = data.purchasedWidgets) === null || _data$purchasedWidget === void 0 ? void 0 : _data$purchasedWidget.slice(),\n        cartWidgets: data === null || data === void 0 ? void 0 : (_data$cartWidgets = data.cartWidgets) === null || _data$cartWidgets === void 0 ? void 0 : _data$cartWidgets.slice()\n      };\n      store.dispatch(setUserDetails(details)); // store.dispatch(setPurchasedWidgets(data.purchasedwidgets));\n      // store.dispatch(setCartWidgets(data.cartwidgets));\n\n      logInUser();\n    });\n  });\n};\nexport const logInUser = () => {\n  // store.dispatch(setisLoggedIn(true));\n  // window.location.href = \"/\";\n  localStorage.setItem(\"auth\", \"true\");\n};\nexport const logOutUser = () => {\n  store.dispatch(setisLoggedIn(false)); // window.location.href = \"login\";\n\n  localStorage.setItem(\"auth\", \"false\");\n}; // function ab(){\n//     return[setLoginErrMsg(\"Authenticated !\"), setisLoggedIn(true)]\n// }\n\nconst action1 = () => {\n  return dispatch => {\n    dispatch(setLoginErrMsg(\"Authenticated !\"));\n    dispatch(setisLoggedIn(true));\n  };\n};\n\nexport const ValidateUser = (uname, pswd) => {\n  return new Promise((res, rej) => {\n    let isAuth;\n    let userObj = {\n      \"username\": uname,\n      \"password\": pswd\n    };\n    axios.post(\"http://localhost:5000/user/login\", userObj).then(x => {\n      isAuth = x.data.authenticated;\n\n      if (!isAuth) {\n        store.dispatch(setLoginErrMsg(x.data.errorMsg));\n        localStorage.setItem(\"auth\", \"false\");\n        res(false);\n      } else {\n        setReduxUser(uname);\n        localStorage.setItem(\"auth\", \"true\"); // store.dispatch(setLoginErrMsg(\"Authenticated !\"));\n        // logInUser();\n        // setTimeout(() => {\n        // }, 20);\n\n        res(true);\n      }\n    });\n  });\n}; // export const loginSeq = async (uname:any, pswd:any) => {\n//     const a = ValidateUser\n// }\n\n_c = ValidateUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"ValidateUser\");","map":{"version":3,"names":["setisLoggedIn","setLoginErrMsg","setUserDetails","store","axios","setReduxUser","username","Promise","res","rej","get","then","user","data","details","isLoggedIn","loginErrMsg","firstname","lastname","purchasedWidgets","slice","cartWidgets","dispatch","logInUser","localStorage","setItem","logOutUser","action1","ValidateUser","uname","pswd","isAuth","userObj","post","x","authenticated","errorMsg"],"sources":["D:/gaurav/engame2/my-app/src/Utils/userFunctions.tsx"],"sourcesContent":["import { setCartWidgets, setisLoggedIn, setLoginErrMsg, setPurchasedWidgets, setUserDetails } from '../redux/UserRedux/userAction';\r\nimport store from '../redux/store';\r\nimport axios from 'axios';\r\n\r\nexport const setReduxUser = (username:any) => {\r\n    return new Promise((res,rej) => {\r\n        axios.get(\"http://localhost:5000/user/\" + username)\r\n        .then((user:any) => {\r\n            let data = user.data;\r\n            let details = {\r\n                isLoggedIn: true,\r\n                loginErrMsg: \"\",\r\n                username: data?.username,\r\n                firstname: data?.firstname,\r\n                lastname: data?.lastname,\r\n                purchasedWidgets: data?.purchasedWidgets?.slice(),\r\n                cartWidgets: data?.cartWidgets?.slice()\r\n            }\r\n            store.dispatch(setUserDetails(details));\r\n            // store.dispatch(setPurchasedWidgets(data.purchasedwidgets));\r\n            // store.dispatch(setCartWidgets(data.cartwidgets));\r\n            logInUser();\r\n        })\r\n    })\r\n}\r\n\r\nexport const logInUser = () => {\r\n    // store.dispatch(setisLoggedIn(true));\r\n    // window.location.href = \"/\";\r\n    localStorage.setItem(\"auth\", \"true\");\r\n};\r\n\r\nexport const logOutUser = () => {\r\n    store.dispatch(setisLoggedIn(false));\r\n    // window.location.href = \"login\";\r\n    localStorage.setItem(\"auth\", \"false\");\r\n};\r\n\r\n// function ab(){\r\n//     return[setLoginErrMsg(\"Authenticated !\"), setisLoggedIn(true)]\r\n// }\r\n\r\nconst action1 = () => {\r\n    return (dispatch:any) => {\r\n      dispatch(setLoginErrMsg(\"Authenticated !\"))\r\n      dispatch(setisLoggedIn(true))\r\n    }\r\n  }\r\n\r\nexport const ValidateUser = (uname:any, pswd:any) => {\r\n    return new Promise((res,rej) => {\r\n        let isAuth:any;\r\n        let userObj = {\r\n            \"username\": uname,\r\n            \"password\": pswd\r\n        }\r\n        axios.post(\"http://localhost:5000/user/login\", userObj)\r\n        .then((x:any) => {\r\n        isAuth = x.data.authenticated;\r\n        if(!isAuth){\r\n            store.dispatch(setLoginErrMsg(x.data.errorMsg));\r\n            localStorage.setItem(\"auth\", \"false\");\r\n            res(false);\r\n        }\r\n        else{\r\n            setReduxUser(uname);\r\n            localStorage.setItem(\"auth\", \"true\");\r\n            // store.dispatch(setLoginErrMsg(\"Authenticated !\"));\r\n            // logInUser();\r\n            // setTimeout(() => {\r\n            // }, 20);\r\n            res(true);\r\n        }\r\n        })\r\n    })\r\n\r\n}\r\n\r\n// export const loginSeq = async (uname:any, pswd:any) => {\r\n//     const a = ValidateUser\r\n// }"],"mappings":"AAAA,SAAyBA,aAAzB,EAAwCC,cAAxC,EAA6EC,cAA7E,QAAmG,+BAAnG;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,YAAY,GAAIC,QAAD,IAAkB;EAC1C,OAAO,IAAIC,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAa;IAC5BL,KAAK,CAACM,GAAN,CAAU,gCAAgCJ,QAA1C,EACCK,IADD,CACOC,IAAD,IAAc;MAAA;;MAChB,IAAIC,IAAI,GAAGD,IAAI,CAACC,IAAhB;MACA,IAAIC,OAAO,GAAG;QACVC,UAAU,EAAE,IADF;QAEVC,WAAW,EAAE,EAFH;QAGVV,QAAQ,EAAEO,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEP,QAHN;QAIVW,SAAS,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEI,SAJP;QAKVC,QAAQ,EAAEL,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,QALN;QAMVC,gBAAgB,EAAEN,IAAF,aAAEA,IAAF,gDAAEA,IAAI,CAAEM,gBAAR,0DAAE,sBAAwBC,KAAxB,EANR;QAOVC,WAAW,EAAER,IAAF,aAAEA,IAAF,4CAAEA,IAAI,CAAEQ,WAAR,sDAAE,kBAAmBD,KAAnB;MAPH,CAAd;MASAjB,KAAK,CAACmB,QAAN,CAAepB,cAAc,CAACY,OAAD,CAA7B,EAXgB,CAYhB;MACA;;MACAS,SAAS;IACZ,CAhBD;EAiBH,CAlBM,CAAP;AAmBH,CApBM;AAsBP,OAAO,MAAMA,SAAS,GAAG,MAAM;EAC3B;EACA;EACAC,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,MAA7B;AACH,CAJM;AAMP,OAAO,MAAMC,UAAU,GAAG,MAAM;EAC5BvB,KAAK,CAACmB,QAAN,CAAetB,aAAa,CAAC,KAAD,CAA5B,EAD4B,CAE5B;;EACAwB,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,OAA7B;AACH,CAJM,C,CAMP;AACA;AACA;;AAEA,MAAME,OAAO,GAAG,MAAM;EAClB,OAAQL,QAAD,IAAkB;IACvBA,QAAQ,CAACrB,cAAc,CAAC,iBAAD,CAAf,CAAR;IACAqB,QAAQ,CAACtB,aAAa,CAAC,IAAD,CAAd,CAAR;EACD,CAHD;AAID,CALH;;AAOA,OAAO,MAAM4B,YAAY,GAAG,CAACC,KAAD,EAAYC,IAAZ,KAAyB;EACjD,OAAO,IAAIvB,OAAJ,CAAY,CAACC,GAAD,EAAKC,GAAL,KAAa;IAC5B,IAAIsB,MAAJ;IACA,IAAIC,OAAO,GAAG;MACV,YAAYH,KADF;MAEV,YAAYC;IAFF,CAAd;IAIA1B,KAAK,CAAC6B,IAAN,CAAW,kCAAX,EAA+CD,OAA/C,EACCrB,IADD,CACOuB,CAAD,IAAW;MACjBH,MAAM,GAAGG,CAAC,CAACrB,IAAF,CAAOsB,aAAhB;;MACA,IAAG,CAACJ,MAAJ,EAAW;QACP5B,KAAK,CAACmB,QAAN,CAAerB,cAAc,CAACiC,CAAC,CAACrB,IAAF,CAAOuB,QAAR,CAA7B;QACAZ,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,OAA7B;QACAjB,GAAG,CAAC,KAAD,CAAH;MACH,CAJD,MAKI;QACAH,YAAY,CAACwB,KAAD,CAAZ;QACAL,YAAY,CAACC,OAAb,CAAqB,MAArB,EAA6B,MAA7B,EAFA,CAGA;QACA;QACA;QACA;;QACAjB,GAAG,CAAC,IAAD,CAAH;MACH;IACA,CAjBD;EAkBH,CAxBM,CAAP;AA0BH,CA3BM,C,CA6BP;AACA;AACA;;KA/BaoB,Y"},"metadata":{},"sourceType":"module"}