{"ast":null,"code":"export const crypt = (salt, text) => {\n  const textToChars = text => text.split(\"\").map(c => c.charCodeAt(0));\n\n  const byteHex = n => (\"0\" + Number(n).toString(16)).substr(-2);\n\n  const applySaltToChar = code => textToChars(salt).reduce((a, b) => a ^ b, code);\n\n  return text.split(\"\").map(textToChars).map(applySaltToChar).map(byteHex).join(\"\");\n};\nexport const decrypt = (salt, encoded) => {\n  const textToChars = text => text.split(\"\").map(c => c.charCodeAt(0));\n\n  const applySaltToChar = code => textToChars(salt).reduce((a, b) => a ^ b, code);\n\n  return encoded.match(/.{1,2}/g).map(hex => parseInt(hex, 16)).map(applySaltToChar).map(charCode => String.fromCharCode(charCode)).join(\"\");\n};","map":{"version":3,"names":["crypt","salt","text","textToChars","split","map","c","charCodeAt","byteHex","n","Number","toString","substr","applySaltToChar","code","reduce","a","b","join","decrypt","encoded","match","hex","parseInt","charCode","String","fromCharCode"],"sources":["D:/gaurav/engame2/my-app/src/Utils/EncryptFunctions.tsx"],"sourcesContent":["export const crypt = (salt:any, text:any) => {\r\n    const textToChars = (text:any) => text.split(\"\").map((c:any) => c.charCodeAt(0));\r\n    const byteHex = (n:any) => (\"0\" + Number(n).toString(16)).substr(-2);\r\n    const applySaltToChar = (code:any) => textToChars(salt).reduce((a:any, b:any) => a ^ b, code);\r\n  \r\n    return text\r\n      .split(\"\")\r\n      .map(textToChars)\r\n      .map(applySaltToChar)\r\n      .map(byteHex)\r\n      .join(\"\");\r\n  };\r\n  \r\nexport const decrypt = (salt:any, encoded:any) => {\r\n    const textToChars = (text:any) => text.split(\"\").map((c:any) => c.charCodeAt(0));\r\n    const applySaltToChar = (code:any) => textToChars(salt).reduce((a:any, b:any) => a ^ b, code);\r\n    return encoded\r\n      .match(/.{1,2}/g)\r\n      .map((hex:any) => parseInt(hex, 16))\r\n      .map(applySaltToChar)\r\n      .map((charCode:any) => String.fromCharCode(charCode))\r\n      .join(\"\");\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,KAAK,GAAG,CAACC,IAAD,EAAWC,IAAX,KAAwB;EACzC,MAAMC,WAAW,GAAID,IAAD,IAAcA,IAAI,CAACE,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAoBC,CAAD,IAAWA,CAAC,CAACC,UAAF,CAAa,CAAb,CAA9B,CAAlC;;EACA,MAAMC,OAAO,GAAIC,CAAD,IAAW,CAAC,MAAMC,MAAM,CAACD,CAAD,CAAN,CAAUE,QAAV,CAAmB,EAAnB,CAAP,EAA+BC,MAA/B,CAAsC,CAAC,CAAvC,CAA3B;;EACA,MAAMC,eAAe,GAAIC,IAAD,IAAcX,WAAW,CAACF,IAAD,CAAX,CAAkBc,MAAlB,CAAyB,CAACC,CAAD,EAAQC,CAAR,KAAkBD,CAAC,GAAGC,CAA/C,EAAkDH,IAAlD,CAAtC;;EAEA,OAAOZ,IAAI,CACRE,KADI,CACE,EADF,EAEJC,GAFI,CAEAF,WAFA,EAGJE,GAHI,CAGAQ,eAHA,EAIJR,GAJI,CAIAG,OAJA,EAKJU,IALI,CAKC,EALD,CAAP;AAMD,CAXI;AAaP,OAAO,MAAMC,OAAO,GAAG,CAAClB,IAAD,EAAWmB,OAAX,KAA2B;EAC9C,MAAMjB,WAAW,GAAID,IAAD,IAAcA,IAAI,CAACE,KAAL,CAAW,EAAX,EAAeC,GAAf,CAAoBC,CAAD,IAAWA,CAAC,CAACC,UAAF,CAAa,CAAb,CAA9B,CAAlC;;EACA,MAAMM,eAAe,GAAIC,IAAD,IAAcX,WAAW,CAACF,IAAD,CAAX,CAAkBc,MAAlB,CAAyB,CAACC,CAAD,EAAQC,CAAR,KAAkBD,CAAC,GAAGC,CAA/C,EAAkDH,IAAlD,CAAtC;;EACA,OAAOM,OAAO,CACXC,KADI,CACE,SADF,EAEJhB,GAFI,CAECiB,GAAD,IAAaC,QAAQ,CAACD,GAAD,EAAM,EAAN,CAFrB,EAGJjB,GAHI,CAGAQ,eAHA,EAIJR,GAJI,CAICmB,QAAD,IAAkBC,MAAM,CAACC,YAAP,CAAoBF,QAApB,CAJlB,EAKJN,IALI,CAKC,EALD,CAAP;AAMD,CATI"},"metadata":{},"sourceType":"module"}