{"ast":null,"code":"var _jsxFileName = \"D:\\\\gaurav\\\\engame2\\\\my-app\\\\src\\\\Pages\\\\LoginPage\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"./Login.scss\";\nimport logoimg from \"../../Assets/Engame_logo.svg\";\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport { setReduxUser } from '../../Utils/userFunctions';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setLoginErrMsg } from '../../redux/UserRedux/userAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LoginPage() {\n  _s();\n\n  const [errorMsg, setErrorMsg] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const storeData = useSelector(data => data);\n  let navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const ValidateUser = (uname, pswd) => {\n    let isAuth;\n    let userObj = {\n      \"username\": uname,\n      \"password\": pswd\n    };\n    axios.post(\"http://localhost:5000/user/login\", userObj).then(x => {\n      console.log(x.data);\n      isAuth = x.data.authenticated;\n\n      if (!isAuth) {\n        dispatch(setLoginErrMsg(x.data.errorMsg));\n        localStorage.setItem(\"auth\", \"false\");\n      } else {\n        setReduxUser(username);\n        localStorage.setItem(\"auth\", \"true\");\n        navigate(\"/\"); // axios.get(\"http://localhost:5000/user/\" + username)\n        // .then((user:any) => {\n        //   let data = user.data;\n        //   let details = {\n        //     isLoggedIn: true,\n        //     loginErrMsg: \"\",\n        //     username: data?.username,\n        //     firstname: data?.firstname,\n        //     lastname: data?.lastname,\n        //     purchasedWidgets: data?.purchasedWidgets?.slice(),\n        //     cartWidgets: data?.cartWidgets?.slice()\n        //   }\n        //   dispatch(setUserDetails(details));\n        //   localStorage.setItem(\"auth\", \"true\");\n        //   navigate(\"/\")\n        // })\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login_box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lb_imgbox\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: logoimg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"lb_body\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"lb_error_msg\",\n        children: storeData.user.userDetails.loginErrMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"lb_inputclass\",\n        type: \"text\",\n        placeholder: \"Username\",\n        onChange: e => setUsername(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"lb_inputclass\",\n        type: \"text\",\n        placeholder: \"Password\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"login_btn\",\n        onClick: () => ValidateUser(username, password),\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LoginPage, \"/dAHxyfNu0SR6S8tNRbjnuxYx5w=\", false, function () {\n  return [useSelector, useNavigate, useDispatch];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"names":["React","useState","logoimg","axios","useNavigate","setReduxUser","useDispatch","useSelector","setLoginErrMsg","LoginPage","errorMsg","setErrorMsg","username","setUsername","password","setPassword","storeData","data","navigate","dispatch","ValidateUser","uname","pswd","isAuth","userObj","post","then","x","console","log","authenticated","localStorage","setItem","user","userDetails","loginErrMsg","e","target","value"],"sources":["D:/gaurav/engame2/my-app/src/Pages/LoginPage/index.tsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport \"./Login.scss\";\r\nimport logoimg from \"../../Assets/Engame_logo.svg\";\r\nimport axios from 'axios';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { setReduxUser } from '../../Utils/userFunctions';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setLoginErrMsg, setUserDetails } from '../../redux/UserRedux/userAction';\r\nimport store from '../../redux/store';\r\n\r\nfunction LoginPage() {\r\n\r\n  const [errorMsg, setErrorMsg] = useState(\"\");\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const storeData = useSelector((data:any) => data);\r\n  let navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n\r\n  const ValidateUser = (uname:any, pswd:any) => {\r\n    let isAuth:any;\r\n    let userObj = {\r\n      \"username\": uname,\r\n      \"password\": pswd\r\n    }\r\n    axios.post(\"http://localhost:5000/user/login\", userObj)\r\n    .then((x:any) => {\r\n      console.log(x.data)\r\n      isAuth = x.data.authenticated;\r\n      if(!isAuth){\r\n        dispatch(setLoginErrMsg(x.data.errorMsg));\r\n        localStorage.setItem(\"auth\", \"false\");\r\n      }\r\n      else{\r\n        setReduxUser(username);\r\n        localStorage.setItem(\"auth\", \"true\");\r\n        navigate(\"/\")\r\n        // axios.get(\"http://localhost:5000/user/\" + username)\r\n        // .then((user:any) => {\r\n        //   let data = user.data;\r\n        //   let details = {\r\n        //     isLoggedIn: true,\r\n        //     loginErrMsg: \"\",\r\n        //     username: data?.username,\r\n        //     firstname: data?.firstname,\r\n        //     lastname: data?.lastname,\r\n        //     purchasedWidgets: data?.purchasedWidgets?.slice(),\r\n        //     cartWidgets: data?.cartWidgets?.slice()\r\n        //   }\r\n        //   dispatch(setUserDetails(details));\r\n        //   localStorage.setItem(\"auth\", \"true\");\r\n        //   navigate(\"/\")\r\n        // })\r\n      }\r\n    })\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='login_box'>\r\n      <div className='lb_imgbox'>\r\n        <img src={logoimg}/>\r\n      </div>\r\n      <div className='lb_body'>\r\n        <div className='lb_error_msg'>{storeData.user.userDetails.loginErrMsg}</div>\r\n        <input className='lb_inputclass' type=\"text\" placeholder='Username' onChange={(e) => setUsername(e.target.value)}/>\r\n        <input className='lb_inputclass' type=\"text\" placeholder='Password' onChange={(e) => setPassword(e.target.value)}/>\r\n        <button className='login_btn' onClick={() => ValidateUser(username,password)}>Login</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoginPage"],"mappings":"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"},"metadata":{},"sourceType":"module"}