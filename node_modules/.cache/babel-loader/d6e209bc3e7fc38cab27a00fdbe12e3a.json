{"ast":null,"code":"// import { legacy_createStore, compose, applyMiddleware } from \"redux\";\n// // @ts-ignore\n// import rootReducer from \"./rootReducer\";\n// import thunk, { ThunkDispatch, ThunkMiddleware } from \"redux-thunk\";\n// // const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n// const composeEnhancer = compose;\n// export type AppState = ReturnType<typeof rootReducer>\n// export const store = legacy_createStore(rootReducer,\n//   composeEnhancer(applyMiddleware(thunk))\n// );\n// export default store;\nimport { configureStore } from \"@reduxjs/toolkit\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { persistStore } from \"redux-persist\";\nimport rootReducer from \"./rootReducer\";\nconst store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(thunkMiddleware)\n});\nexport default store;\nexport const persistor = persistStore(store);","map":{"version":3,"names":["configureStore","thunkMiddleware","persistStore","rootReducer","store","reducer","middleware","getDefaultMiddleware","concat","persistor"],"sources":["D:/gaurav/engame2/my-app/src/redux/store.ts"],"sourcesContent":["// import { legacy_createStore, compose, applyMiddleware } from \"redux\";\r\n// // @ts-ignore\r\n// import rootReducer from \"./rootReducer\";\r\n// import thunk, { ThunkDispatch, ThunkMiddleware } from \"redux-thunk\";\r\n\r\n// // const composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n// const composeEnhancer = compose;\r\n\r\n// export type AppState = ReturnType<typeof rootReducer>\r\n\r\n// export const store = legacy_createStore(rootReducer,\r\n//   composeEnhancer(applyMiddleware(thunk))\r\n// );\r\n\r\n// export default store;\r\n\r\nimport { legacy_createStore, compose, applyMiddleware } from \"redux\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { persistStore } from \"redux-persist\";\r\nimport rootReducer from \"./rootReducer\";\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware: (getDefaultMiddleware:any) =>\r\n    getDefaultMiddleware().concat(thunkMiddleware)\r\n});\r\nexport default store;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const persistor = persistStore(store);"],"mappings":"AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAGA,SAASA,cAAT,QAA+B,kBAA/B;AACA,OAAOC,eAAP,MAA4B,aAA5B;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAC3BK,OAAO,EAAEF,WADkB;EAE3BG,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,GAAGC,MAAvB,CAA8BP,eAA9B;AAHyB,CAAD,CAA5B;AAKA,eAAeG,KAAf;AAGA,OAAO,MAAMK,SAAS,GAAGP,YAAY,CAACE,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}